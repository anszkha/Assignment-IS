{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Condo Visitor Management API",
      "description": "API for Condo visitor management"
    },
    "host": "localhost:2000",
    "basePath": "/",
    "schemes": ["http"],

    "securityDefinitions": {
        "BearerAuth": {
          "type": "apiKey",
          "name": "Authorization",
          "in": "header"
        }
      },
      
    "tags": [
      {
        "name": "User",
        "description": "Endpoints for User operations"
      },
      {
        "name": "Admin",
        "description": "Endpoints for Admin operations"
      },
      {
        "name": "Visitor",
        "description": "Endpoints for Visitor operations"
      }
    ],
    "paths": {
      "/login": {
        "post": {
          "summary": "User login",
          "description": "Allows a user to login with a username and password.",
          "tags": ["User"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Login credentials",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["Username", "Password"],
                "properties": {
                  "Username": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Login successful",
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  }
                }
              }
            },
            "400": {
              "description": "Bad request, when the user credentials are not provided or are incorrect"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/register": {
        "post": {
          "summary": "User registration",
          "description": "Allows a new user to register.",
          "tags": ["User"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Registration data",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["Username", "Password", "name", "email"],
                "properties": {
                  "Username": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Registration successful"
            },
            "400": {
              "description": "Bad request, when the registration data is incomplete"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/create-visit": {
        "post": {
          "tags": ["User", "Visitor"],
          "summary": "Create a Visit",
          "description": "Create a new visitor record",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "visitorName": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string"
                  },
                  "citizenship": {
                    "type": "string"
                  },
                  "visitorAddress": {
                    "type": "string"
                  },
                  "phoneNo": {
                    "type": "string"
                  },
                  "vehicleNo": {
                    "type": "string"
                  },
                  "hostId": {
                    "type": "string"
                  },
                  "visitDate": {
                    "type": "string"
                  },
                  "place": {
                    "type": "string"
                  },
                  "purpose": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Visit created successfully"
            },
            "400": {
              "description": "Bad request or missing required fields"
            }
          }
        }
      },
      "/register-admin": {
        "post": {
          "summary": "Admin registration",
          "description": "Allows an admin to register with username, password, name, and email.",
          "tags": ["Admin"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "body",
              "description": "Admin registration data",
              "required": true,
              "schema": {
                "type": "object",
                "required": ["Username", "Password", "name", "email"],
                "properties": {
                  "Username": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Admin registration successful"
            },
            "400": {
              "description": "Bad request, when the registration data is incomplete"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/login-admin": {
        "post": {
          "tags": ["Admin"],
          "summary": "Admin Login",
          "description": "Authenticate an admin user",
          "parameters": [
            {
              "name": "body",
              "in": "body",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "Username": {
                    "type": "string"
                  },
                  "Password": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Admin logged in successfully"
            },
            "400": {
              "description": "Bad request or invalid credentials"
            }
          }
        }
      },
      "/update-visit": {
        "patch": {
          "summary": "Update a specific visit",
          "description": "Allows the admin to update a specific visit record.",
          "tags": ["Admin"],
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "security": [{"BearerAuth":[]}],
          "parameters": [
            {
              "in": "path",
              "name": "visitId",
              "type": "string",
              "required": true,
              "description": "The ID of the visit to update"
            },
            {
              "in": "body",
              "name": "visit",
              "description": "Object containing updated visit details",
              "required": true,
              "schema": {
                "type": "object",
                "properties": {
                  "visitorName": {
                    "type": "string"
                  },
                  "gender": {
                    "type": "string",
                    "enum": ["male", "female", "other"]
                  },
                  "citizenship": {
                    "type": "string"
                  },
                  "visitorAddress": {
                    "type": "string"
                  },
                  "phoneNo": {
                    "type": "string"
                  },
                  "vehicleNo": {
                    "type": "string"
                  },
                  "hostId": {
                    "type": "string"
                  },
                  "visitDate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "place": {
                    "type": "string"
                  },
                  "purpose": {
                    "type": "string"
                  }
                }
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Visit updated successfully"
            },
            "400": {
              "description": "Bad request, when required fields are missing or invalid"
            },
            "404": {
              "description": "Visit not found"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/delete-visit": {
        "delete": {
          "summary": "Delete a specific visit",
          "description": "Allows the admin to delete a specific visit by ID.",
          "tags": ["Admin"],
          "parameters": [
            {
              "in": "path",
              "name": "visitId",
              "type": "string",
              "required": true,
              "description": "The ID of the visit to delete"
            }          
          ],
          "responses": {
            "200": {
              "description": "Visit deleted successfully"
            },
            "404": {
              "description": "Visit not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "security": [
            {
              "BearerAuth": []
            }
          ]
        }
      },
      "/visit-details": {
        "get": {
          "tags": ["Admin"],
          "summary": "Get Visit Details",
          "description": "Retrieve a list of visit details (admin only)",
          "security": [{"BearerAuth":[]}],
          "parameters": [
            {
              "in": "query",
              "name": "visitId",
              "type": "string",
              "required": true,
              "description": "The ID of the visit to delete"
            }
          ],
          "responses": {
            "200": {
              "description": "List of visit details retrieved successfully"
            },
            "500": {
              "description": "An error occurred while retrieving visit details"
            }
          }
        }
      }
    },
    "definitions": {
      "Visit": {
        "type": "object",
        "required": ["visitorId", "visitorName"],
        "properties": {
          "visitorId": {
            "type": "string"
          },
          "visitorName": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "other"]
          },
          "citizenship": {
            "type": "string"
          },
          "visitorAddress": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "vehicleNo": {
            "type": "string"
          },
          "hostId": {
            "type": "string"
          },
          "visitDate": {
            "type": "string",
            "format": "date-time"
          },
          "place": {
            "type": "string"
          },
          "purpose": {
            "type": "string"
          }
        }
      }
    }
  }
  